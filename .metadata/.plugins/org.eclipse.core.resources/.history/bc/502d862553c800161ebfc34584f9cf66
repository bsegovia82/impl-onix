package com.onix.modulo.servicio.notificacion;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.ejb.Stateless;
import javax.inject.Inject;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import com.onix.modulo.servicio.interfaces.IRecursoNotificadorMail;

@Stateless
public class NotificadorMail {
	@Inject
	private IRecursoNotificadorMail lNotificador;

	public void enviarEmailTextoSimple(String pDireccionesDestino, String pAsunto, String pMensaje) throws Throwable 
	{

		Message message = new MimeMessage(lNotificador.obtenerSessionMail());
		message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(pDireccionesDestino));
		message.setSubject(pAsunto);
		message.setText(pMensaje);
		Transport.send(message);

	}

	public HashMap<String, List<String>> enviarEmailTextoMultiple(List<String> pDireccionesDestino, String pAsunto, String pMensaje) 
	{
		HashMap<String, List<String>> lMapaResultante = new HashMap<>();
		List<String> lListaEmailsEnviados = new ArrayList<>();
		List<String> lListaEmailsFallidos = new ArrayList<>();
		for (  String lDestino : pDireccionesDestino)
		{
			try
			{
				enviarEmailTextoSimple(lDestino, pAsunto, pMensaje);
				lListaEmailsEnviados.add(lDestino);
			}catch(Throwable lError)
			{
				
			}
		}
	}

}
